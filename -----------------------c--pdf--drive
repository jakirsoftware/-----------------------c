//https://chatgpt.com/c/67ac0640-dbe0-8008-9c9c-241a9a50736e
//openById('1Bfq89wi90O6w_RFLquFLXtyrD8YUXAQZroc0Cv5FxJU')
//1FaX7GR7c4g-kb_V6caYsv1Upc5_wUmFa
function doGet() {
  return HtmlService.createTemplateFromFile('index').evaluate().setTitle("Cart")
    .addMetaTag('viewport', 'width=device-width, initial-scale=1')
    .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
}

// Fetch products from "Products" sheet
function getProducts() {
  const sheet = SpreadsheetApp.openById('1Bfq89wi90O6w_RFLquFLXtyrD8YUXAQZroc0Cv5FxJU').getSheetByName("Products");
  const data = sheet.getRange(2, 1, sheet.getLastRow() - 1, 3).getValues();
  let products = [];

  data.forEach(row => {
    if (row[0]) {
      products.push({
        name: row[0],
        image: row[1],
        price: parseFloat(row[2])
      });
    }
  });

  return products;
}

// Save order to "Orders" sheet
function saveOrder(orderData) {
  var sheet = SpreadsheetApp.openById('1Bfq89wi90O6w_RFLquFLXtyrD8YUXAQZroc0Cv5FxJU').getSheetByName("Orders");
  var controlSheet = SpreadsheetApp.openById('1Bfq89wi90O6w_RFLquFLXtyrD8YUXAQZroc0Cv5FxJU').getSheetByName("Control");
  var folderId = "1FaX7GR7c4g-kb_V6caYsv1Upc5_wUmFa";  // Change this to your Drive folder ID
  var folder = DriveApp.getFolderById(folderId);

  var invoiceNumber = orderData[0].invoice;
  var tableNumber = orderData[0].tableNumber;
  var date = new Date();

   // Fetch headlines from Control sheet
  var headline1 = controlSheet.getRange("A2").getValue();
  var headline2 = controlSheet.getRange("B2").getValue();
  var headline3 = controlSheet.getRange("C2").getValue();

  // Generate PDF
  const pdfUrl = generateInvoicePDF(invoiceNumber, tableNumber, orderData, headline1, headline2, headline3);
  
  sheet.appendRow([invoiceNumber, tableNumber, pdfUrl, date]);

  return pdfUrl;
}

function generateInvoicePDF(invoiceNumber, tableNumber, orderItems, headline1, headline2, headline3) {
  const folder = DriveApp.getFolderById('1FaX7GR7c4g-kb_V6caYsv1Upc5_wUmFa'); // Change this to your folder ID
  const file = folder.createFile(
    "Invoice_" + invoiceNumber + ".pdf",
    createPOSPDFContent(invoiceNumber, tableNumber, orderItems, headline1, headline2, headline3),
    MimeType.PDF
  );
  return file.getUrl();
}

function createPOSPDFContent(invoiceNumber, tableNumber, orderItems, headline1, headline2, headline3) {
  let total = 0;
  let content = `
    <div style="width: 58mm; font-size: 12px; font-family: monospace; text-align: center;">
      <h2>${headline1}</h2>
      <h3>${headline2}</h3>
      <h4>${headline3}</h4>
      <p>Invoice: <strong>${invoiceNumber}</strong></p>
      <p>Table: <strong>${tableNumber}</strong></p>
      <hr>
      <table style="width: 100%; font-size: 10px; border-collapse: collapse;">
        <tr>
          <th style="text-align: left;">Item</th>
          <th>Qty</th>
          <th>Price</th>
          <th>Total</th>
        </tr>`;

  orderItems.forEach(item => {
    let itemTotal = item.quantity * item.price;
    total += itemTotal;
    content += `
        <tr>
          <td>${item.productName}</td>
          <td>${item.quantity}</td>
          <td>$${item.price.toFixed(2)}</td>
          <td>$${itemTotal.toFixed(2)}</td>
        </tr>`;
  });

  content += `
        <tr>
          <td colspan="3"><strong>Grand Total</strong></td>
          <td><strong>$${total.toFixed(2)}</strong></td>
        </tr>
      </table>
      <hr>
      <p>Thank you for your order!</p>
    </div>`;

  return content;
}
---------------------------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Order System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #f4f4f4;
            margin: 20px;
        }
        .product-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
            max-width: 600px;
            margin: auto;
        }
        .product {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
            border-radius: 5px;
            background-color: #fff;
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
        }
        .product img {
            max-width: 100px;
            height: auto;
        }
        .cart-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #fff;
        }
        .cart-item span {
            flex-grow: 1;
        }
        .cart-item input {
            width: 50px;
            text-align: center;
        }
        .cart-btn {
            margin: 0 5px;
            cursor: pointer;
        }
        .total {
            font-weight: bold;
            font-size: 1.2em;
            margin-top: 10px;
        }
        .submit-btn {
            display: block;
            margin: 10px auto;
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            cursor: pointer;
        }
        .invoice {
            font-size: 1.1em;
            font-weight: bold;
            color: blue;
            margin-top: 10px;
        }
        .message {
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
            font-size: 1.1em;
            display: none;
        }
        .success {
            background-color: #28a745;
            color: white;
        }
        .error {
            background-color: #dc3545;
            color: white;
        }
        .table-warning {
            color: red;
            font-size: 0.9em;
            display: none;
        }
    </style>
</head>
<body>

    <div id="messageContainer" class="message"></div>

    <h1>Product List</h1>
    <input type="text" id="searchBox" placeholder="Search products..." onkeyup="searchProducts()">
    <div id="productList"></div>

    <h2>My Cart List</h2>
    <div id="cartList"></div>
    <div id="totalAmount" class="total">Total: 0.00 Tk.</div>

    <div>
        <input type="text" id="tableNumber" placeholder="Enter name or number" oninput="clearWarning()">
        <div id="tableWarning" class="table-warning">⚠ Please enter name or number.</div>
    </div>

    <button class="submit-btn" onclick="submitOrder()">Submit Order</button>
    <div id="invoiceNumber" class="invoice"></div>

    <script>
        let products = [];
        let cart = [];

        function fetchProducts() {
            google.script.run.withSuccessHandler(displayProducts).getProducts();
        }

        function displayProducts(data) {
            products = data;
            renderProductList(data);
        }

        function renderProductList(data) {
            let productList = document.getElementById("productList");
            productList.innerHTML = "";
            let productHTML = '<div class="product-container">';

            data.forEach((product, index) => {
                productHTML += `
                    <div class="product">
                        <img src="${product.image}" alt="${product.name}"><br>
                        <strong>${product.name}</strong><br>
                        ${product.price.toFixed(2)} Tk.<br>
                        <button onclick="addToCart(${index})">Add to Cart</button>
                    </div>
                `;
            });

            productHTML += '</div>';
            productList.innerHTML = productHTML;
        }

        function searchProducts() {
            let searchTerm = document.getElementById("searchBox").value.toLowerCase();
            if (searchTerm === "") {
                renderProductList(products);
            } else {
                let filteredProducts = products.filter(p => p.name.toLowerCase().includes(searchTerm));
                renderProductList(filteredProducts);
            }
        }

        function addToCart(index) {
            let product = products[index];
            let cartItem = cart.find(item => item.name === product.name);

            if (cartItem) {
                cartItem.quantity++;
            } else {
                cart.push({ ...product, quantity: 1 });
            }
            updateCart();
        }

        function updateCart() {
            let cartList = document.getElementById("cartList");
            let totalAmount = 0;
            cartList.innerHTML = "";

            cart.forEach((item, index) => {
                let itemTotal = item.price * item.quantity;
                totalAmount += itemTotal;

                cartList.innerHTML += `
                    <div class="cart-item">
                        <span>${item.name} - ${itemTotal.toFixed(2)} Tk.</span>
                        <input type="number" value="${item.quantity}" min="1" onchange="editQuantity(${index}, this.value)">
                        <button class="cart-btn" onclick="increaseQuantity(${index})">+</button>
                        <button class="cart-btn" onclick="decreaseQuantity(${index})">−</button>
                        <button class="cart-btn" onclick="removeFromCart(${index})">❌</button>
                    </div>
                `;
            });

            document.getElementById("totalAmount").innerText = `Total: ${totalAmount.toFixed(2)} Tk.`;
        }

        function clearWarning() {
            document.getElementById("tableWarning").style.display = "none";
        }

        function submitOrder() {
            let tableNumber = document.getElementById("tableNumber").value;

            if (!tableNumber.trim()) {
                document.getElementById("tableWarning").style.display = "block";
                return;
            }

            let now = new Date();
            let invoiceNumber = `${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}-${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}${String(now.getSeconds()).padStart(2, '0')}`;

            document.getElementById("invoiceNumber").innerText = `Invoice: ${invoiceNumber}`;

            let orderData = cart.map(item => ({
                productName: item.name,
                price: item.price,
                quantity: item.quantity,
                tableNumber: tableNumber,
                invoice: invoiceNumber
            }));

            google.script.run.withSuccessHandler(() => {
                cart = [];
                updateCart();
                document.getElementById("tableNumber").value = "";
                document.getElementById("invoiceNumber").innerText = "";
            }).saveOrder(orderData);
        }

        function increaseQuantity(index) {
            cart[index].quantity++;
            updateCart();
        }

        function decreaseQuantity(index) {
            if (cart[index].quantity > 1) {
                cart[index].quantity--;
            } else {
                cart.splice(index, 1);
            }
            updateCart();
        }

        function editQuantity(index, newQuantity) {
            let qty = parseInt(newQuantity);
            if (qty > 0) {
                cart[index].quantity = qty;
            } else {
                cart.splice(index, 1);
            }
            updateCart();
        }

        function removeFromCart(index) {
            cart.splice(index, 1);
            updateCart();
        }

        window.onload = fetchProducts;
    </script>

</body>
</html>
