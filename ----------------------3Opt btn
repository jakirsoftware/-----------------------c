function doGet() {
  return HtmlService.createTemplateFromFile('index').evaluate().setTitle("Data Entry")
    .addMetaTag('viewport', 'width=device-width, initial-scale=1')
    .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
}


// Fetch Opt1 from the 'Control' sheet
function getOpt1() { 
  var sheet = SpreadsheetApp.openById('1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1').getSheetByName("Control");
  var data = sheet.getRange("A2:A").getValues().flat(); 
  return [...new Set(data.filter(String))]; // Remove duplicates & empty values
}

// Fetch Opt2 based on the selected type from the 'Control' sheet
function getOpt2ByType(type) {
  var sheet = SpreadsheetApp.openById('1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1').getSheetByName("Control");
  var Opt1 = sheet.getRange("A2:A").getValues().flat();
  var Opt2 = sheet.getRange("B2:B").getValues().flat();
  
  var filteredOpt2 = [];
  
  // Loop through Opt1 and Opt2 and match the selected type
  for (var i = 0; i < Opt1.length; i++) {
    if (Opt1[i] === type && Opt2[i]) {
      filteredOpt2.push(Opt2[i]);
    }
  }

  return [...new Set(filteredOpt2.filter(String))]; // Remove duplicates & empty values
}

// Fetch Opt3 based on selected Opt1 and Opt2 from 'Control' sheet
function getOpt3ByType(type, term) {
  var sheet = SpreadsheetApp.openById('1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1').getSheetByName("Control");
  var Opt1 = sheet.getRange("A2:A").getValues().flat();
  var Opt2 = sheet.getRange("B2:B").getValues().flat();
  var Opt3 = sheet.getRange("C2:C").getValues().flat();

  var filteredOpt3 = [];

  // Loop through Opt1, Opt2, and Opt3 and match the selected type and term
  for (var i = 0; i < Opt1.length; i++) {
    if (Opt1[i] === type && Opt2[i] === term && Opt3[i]) {
      filteredOpt3.push(Opt3[i]);
    }
  }

  return [...new Set(filteredOpt3.filter(String))]; // Remove duplicates & empty values
}




// Fetch contacts from the 'Contact' sheet
function getContacts() {
  var sheet = SpreadsheetApp.openById('1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1').getSheetByName("Contact");
  var data = sheet.getRange("A2:A").getValues().flat();
  return [...new Set(data.filter(String))]; // Remove duplicates & empty values
}

// Fetch data2 names and prices from the 'data2' sheet
function getdata2s() {
  var sheet = SpreadsheetApp.openById('1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1').getSheetByName("data2");
  var data = sheet.getRange("A2:B").getValues();
  return data.filter(row => row[0]); // Remove empty rows
}







// Function to generate a unique invoice ID in YYMMDDHHMMSSmmm format
function tid() {
  var now = new Date();
  var yy = now.getFullYear().toString().slice(-2);
  var mm = (now.getMonth() + 1).toString().padStart(2, '0');
  var dd = now.getDate().toString().padStart(2, '0');
  var hh = now.getHours().toString().padStart(2, '0');
  var min = now.getMinutes().toString().padStart(2, '0');
  var ss = now.getSeconds().toString().padStart(2, '0');
  var ms = now.getMilliseconds().toString().padStart(3, '0');
  
  return `${yy}${mm}${dd}${hh}${min}${ss}${ms}`;
}










// Save Invoice Data
function saveInvoice(data1) {
  var sheet = SpreadsheetApp.openById('1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1').getSheetByName("Data");

  data1.data2s.forEach(function(data2) {
    sheet.appendRow([
      tid(),
      data1.date,
      data1.Type,
      data1.Opt2,
      data1.invoiceNumber,
      data1.contact,
      data1.labor,
      data1.description,
      data2.price,
      data2.quantity,
      data2.unit,
      data2.total,
      data2.rent,
      data2.note,
    ]);
  });

  return "Invoice Submitted Successfully!";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 50px;
        }
        input, .option-buttons {
            display: block;
            margin: 10px 0;
            padding: 10px;
            font-size: 16px;
        }
        .option-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .option-button {
            padding: 10px 15px;
            border: 1px solid #007bff;
            background-color: white;
            color: #007bff;
            cursor: pointer;
            border-radius: 5px;
        }
        .option-button.selected {
            background-color: #007bff;
            color: white;
        }
    </style>
    <script>
        var selectedOpt1 = null;
        var selectedOpt2 = null;
        var selectedOpt3 = null;

        // Fetch Opt1 from Google Apps Script
        function fetchOpt1() {
            google.script.run.withSuccessHandler(displayOpt1).getOpt1();
        }

        // Fetch Opt2 based on selected Type
        function fetchOpt2ByType(type) {
            google.script.run.withSuccessHandler(displayOpt2).getOpt2ByType(type);
        }

        // Fetch Opt3 based on selected Type and Term
        function fetchOpt3ByType(type, term) {
            google.script.run.withSuccessHandler(displayOpt3).getOpt3ByType(type, term);
        }

        // Display the Opt2 options
        function displayOpt2(Opt2) {
            var container = document.getElementById("opt2Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt2 || Opt2.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt2 available for the selected type.</p>";
                return;
            }

            Opt2.forEach(term => {
                var button = document.createElement("button");
                button.textContent = term;
                button.classList.add("option-button");
                button.onclick = function () {
                    // Allow only one term to be selected at a time
                    document.querySelectorAll("#opt2Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt2 = term;  // Store selected term
                    fetchOpt3ByType(selectedOpt1, term);  // Fetch corresponding Opt3 for selected type and term
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Display the Opt3 options
        function displayOpt3(Opt3) {
            var container = document.getElementById("opt3Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt3 || Opt3.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt3 available for the selected type and term.</p>";
                return;
            }

            Opt3.forEach(option => {
                var button = document.createElement("button");
                button.textContent = option;
                button.classList.add("option-button");
                button.onclick = function () {
                    // Allow only one option to be selected at a time
                    document.querySelectorAll("#opt3Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt3 = option;  // Store selected option
                    updateSelectedOptions();  // Update the selected options
                };
                container.appendChild(button);
            });
        }

        // Display the Type options
        function displayOpt1(Opt1) {
            var container = document.getElementById("opt1Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt1 || Opt1.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt1 available.</p>";
                return;
            }

            Opt1.forEach(type => {
                var button = document.createElement("button");
                button.textContent = type;
                button.classList.add("option-button");
                button.onclick = function () {
                    // Allow only one type to be selected at a time
                    document.querySelectorAll("#opt1Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt1 = type;  // Store selected type
                    fetchOpt2ByType(type);  // Fetch corresponding Opt2 for selected type
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Update the hidden input with selected options (including Opt3)
        function updateSelectedOptions() {
            if (selectedOpt1 && selectedOpt2 && selectedOpt3) {
                document.getElementById("selectedOption").value = `Type: ${selectedOpt1}, Term: ${selectedOpt2}, Option3: ${selectedOpt3}`;
                console.log("Selected Options: ", document.getElementById("selectedOption").value);
            }
        }

        // Load Opt1 when the page is ready
        document.addEventListener("DOMContentLoaded", function() {
            fetchOpt1();
        });
    </script>
</head>
<body>

    <h2>Invoice Form</h2>

    <label for="invoiceNumber">Invoice Number:</label>
    <input type="text" id="invoiceNumber" placeholder="Enter Invoice Number">

    <!-- Opt1 Section -->
    <div class="option-buttons" id="opt1Container">
        <p>Loading Opt1...</p>
    </div>

    <!-- Opt2 Section -->
    <div class="option-buttons" id="opt2Container">
        <p>Loading Opt2...</p>
    </div>

    <!-- Opt3 Section -->
    <div class="option-buttons" id="opt3Container">
        <p>Loading Opt3...</p>
    </div>

    <!-- Hidden input to store the selected options -->
    <input type="hidden" id="selectedOption">

</body>
</html>

--------------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 50px;
        }
        input, .option-buttons {
            display: block;
            margin: 10px 0;
            padding: 10px;
            font-size: 16px;
        }
        .option-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .option-button {
            padding: 10px 15px;
            border: 1px solid #007bff;
            background-color: white;
            color: #007bff;
            cursor: pointer;
            border-radius: 5px;
        }
        .option-button.selected {
            background-color: #007bff;
            color: white;
        }
        .opt-button {
            padding: 10px 15px;
            border: 1px solid #28a745;
            background-color: white;
            color: #28a745;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
        }
        .opt-button:hover {
            background-color: #28a745;
            color: white;
        }
    </style>
    <script>
        var selectedOpt1 = null;
        var selectedOpt2 = null;
        var selectedOpt3 = null;

        // Fetch Opt1 from Google Apps Script
        function fetchOpt1() {
            google.script.run.withSuccessHandler(displayOpt1).getOpt1();
        }

        // Fetch Opt2 based on selected Type
        function fetchOpt2ByType(type) {
            google.script.run.withSuccessHandler(displayOpt2).getOpt2ByType(type);
        }

        // Fetch Opt3 based on selected Type and Term
        function fetchOpt3ByType(type, term) {
            google.script.run.withSuccessHandler(displayOpt3).getOpt3ByType(type, term);
        }

        // Display the Opt2 options
        function displayOpt2(Opt2) {
            var container = document.getElementById("opt2Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt2 || Opt2.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt2 available for the selected type.</p>";
                return;
            }

            Opt2.forEach(term => {
                var button = document.createElement("button");
                button.textContent = term;
                button.classList.add("option-button");
                button.onclick = function () {
                    // Allow only one term to be selected at a time
                    document.querySelectorAll("#opt2Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt2 = term;  // Store selected term
                    fetchOpt3ByType(selectedOpt1, term);  // Fetch corresponding Opt3 for selected type and term
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Display the Opt3 options
        function displayOpt3(Opt3) {
            var container = document.getElementById("opt3Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt3 || Opt3.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt3 available for the selected type and term.</p>";
                return;
            }

            Opt3.forEach(option => {
                var button = document.createElement("button");
                button.textContent = option;
                button.classList.add("option-button");
                button.onclick = function () {
                    // Allow only one option to be selected at a time
                    document.querySelectorAll("#opt3Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt3 = option;  // Store selected option
                    updateSelectedOptions();  // Update the selected options
                };
                container.appendChild(button);
            });
        }

        // Display the Type options
        function displayOpt1(Opt1) {
            var container = document.getElementById("opt1Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt1 || Opt1.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt1 available.</p>";
                return;
            }

            Opt1.forEach(type => {
                var button = document.createElement("button");
                button.textContent = type;
                button.classList.add("option-button");
                button.onclick = function () {
                    // Allow only one type to be selected at a time
                    document.querySelectorAll("#opt1Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt1 = type;  // Store selected type
                    fetchOpt2ByType(type);  // Fetch corresponding Opt2 for selected type
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Update the hidden input with selected options (including Opt3)
        function updateSelectedOptions() {
            if (selectedOpt1 && selectedOpt2 && selectedOpt3) {
                document.getElementById("selectedOption").value = `Type: ${selectedOpt1}, Term: ${selectedOpt2}, Option3: ${selectedOpt3}`;
                console.log("Selected Options: ", document.getElementById("selectedOption").value);
            }
        }

        // Reset or reload the form when Opt button is clicked
        function resetForm() {
            selectedOpt1 = null;
            selectedOpt2 = null;
            selectedOpt3 = null;

            // Clear the selected options from the view
            document.getElementById("opt1Container").innerHTML = "";
            document.getElementById("opt2Container").innerHTML = "";
            document.getElementById("opt3Container").innerHTML = "";

            // Reload Opt1
            fetchOpt1();
        }

        // Load Opt1 when the page is ready
        document.addEventListener("DOMContentLoaded", function() {
            fetchOpt1();
        });
    </script>
</head>
<body>

    <h2>Invoice Form</h2>

    <label for="invoiceNumber">Invoice Number:</label>
    <input type="text" id="invoiceNumber" placeholder="Enter Invoice Number">

    <!-- Opt1 Section -->
    <div class="option-buttons" id="opt1Container">
        <p>Loading Opt1...</p>
    </div>

    <!-- Opt2 Section -->
    <div class="option-buttons" id="opt2Container">
        <p>Loading Opt2...</p>
    </div>

    <!-- Opt3 Section -->
    <div class="option-buttons" id="opt3Container">
        <p>Loading Opt3...</p>
    </div>

    <!-- Hidden input to store the selected options -->
    <input type="hidden" id="selectedOption">

    <!-- 'Opt' Button to Reset/Reload the form -->
    <button class="opt-button" onclick="resetForm()">Reset Options</button>

</body>
</html>
----------------------------------------------

function saveInvoiceData(invoiceNumber, opt1, opt2, opt3) {
    var sheet = SpreadsheetApp.openById('1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1').getSheetByName("Data");
    if (!sheet) {
        sheet = SpreadsheetApp.getActiveSpreadsheet().insertSheet("Data");
        sheet.appendRow(["Invoice Number", "Opt1", "Opt2", "Opt3"]); // Add header row
    }

    sheet.appendRow([invoiceNumber, opt1, opt2, opt3]);
}
------------------------------------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 50px;
        }
        input, .option-buttons {
            display: block;
            margin: 10px 0;
            padding: 10px;
            font-size: 16px;
        }
        .option-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .option-button {
            padding: 10px 15px;
            border: 1px solid #007bff;
            background-color: white;
            color: #007bff;
            cursor: pointer;
            border-radius: 5px;
        }
        .option-button.selected {
            background-color: #007bff;
            color: white;
        }
        .opt-button {
            padding: 10px 15px;
            border: 1px solid #28a745;
            background-color: white;
            color: #28a745;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
        }
        .opt-button:hover {
            background-color: #28a745;
            color: white;
        }
        #notice {
            margin-top: 20px;
            padding: 10px;
            background-color: #28a745;
            color: white;
            font-size: 16px;
            display: none; /* Hidden by default */
            border-radius: 5px;
        }
    </style>
    <script>
        var selectedOpt1 = null;
        var selectedOpt2 = null;
        var selectedOpt3 = null;

        // Fetch Opt1 from Google Apps Script
        function fetchOpt1() {
            google.script.run.withSuccessHandler(displayOpt1).getOpt1();
        }

        // Fetch Opt2 based on selected Type
        function fetchOpt2ByType(type) {
            google.script.run.withSuccessHandler(displayOpt2).getOpt2ByType(type);
        }

        // Fetch Opt3 based on selected Type and Term
        function fetchOpt3ByType(type, term) {
            google.script.run.withSuccessHandler(displayOpt3).getOpt3ByType(type, term);
        }

        // Display the Opt2 options
        function displayOpt2(Opt2) {
            var container = document.getElementById("opt2Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt2 || Opt2.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt2 available for the selected type.</p>";
                return;
            }

            Opt2.forEach(term => {
                var button = document.createElement("button");
                button.textContent = term;
                button.classList.add("option-button");
                button.onclick = function () {
                    // Allow only one term to be selected at a time
                    document.querySelectorAll("#opt2Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt2 = term;  // Store selected term
                    fetchOpt3ByType(selectedOpt1, term);  // Fetch corresponding Opt3 for selected type and term
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Display the Opt3 options
        function displayOpt3(Opt3) {
            var container = document.getElementById("opt3Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt3 || Opt3.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt3 available for the selected type and term.</p>";
                return;
            }

            Opt3.forEach(option => {
                var button = document.createElement("button");
                button.textContent = option;
                button.classList.add("option-button");
                button.onclick = function () {
                    // Allow only one option to be selected at a time
                    document.querySelectorAll("#opt3Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt3 = option;  // Store selected option
                    updateSelectedOptions();  // Update the selected options
                };
                container.appendChild(button);
            });
        }

        // Display the Type options
        function displayOpt1(Opt1) {
            var container = document.getElementById("opt1Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt1 || Opt1.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt1 available.</p>";
                return;
            }

            Opt1.forEach(type => {
                var button = document.createElement("button");
                button.textContent = type;
                button.classList.add("option-button");
                button.onclick = function () {
                    // Allow only one type to be selected at a time
                    document.querySelectorAll("#opt1Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt1 = type;  // Store selected type
                    fetchOpt2ByType(type);  // Fetch corresponding Opt2 for selected type
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Update the hidden input with selected options (including Opt3)
        function updateSelectedOptions() {
            if (selectedOpt1 && selectedOpt2 && selectedOpt3) {
                document.getElementById("selectedOption").value = `Type: ${selectedOpt1}, Term: ${selectedOpt2}, Option3: ${selectedOpt3}`;
                console.log("Selected Options: ", document.getElementById("selectedOption").value);
            }
        }

        // Reset or reload the form when Opt button is clicked
        function resetForm() {
            selectedOpt1 = null;
            selectedOpt2 = null;
            selectedOpt3 = null;

            // Clear the selected options from the view
            document.getElementById("opt1Container").innerHTML = "";
            document.getElementById("opt2Container").innerHTML = "";
            document.getElementById("opt3Container").innerHTML = "";

            // Reload Opt1
            fetchOpt1();
        }

        // Submit form data to Google Sheets
        function submitForm() {
            var invoiceNumber = document.getElementById("invoiceNumber").value;
            var selectedOption = document.getElementById("selectedOption").value;

            if (!invoiceNumber || !selectedOption || !selectedOpt1 || !selectedOpt2 || !selectedOpt3) {
                alert("Please fill out all the fields before submitting.");
                return;
            }

            // Call the Apps Script function to save the data
            google.script.run.saveInvoiceData(invoiceNumber, selectedOpt1, selectedOpt2, selectedOpt3);

            // Display the success message
            var notice = document.getElementById("notice");
            notice.textContent = "Invoice data submitted successfully!";
            notice.style.display = "block"; // Show the notice

            // Optionally, clear the form
            resetForm();
        }

        // Load Opt1 when the page is ready
        document.addEventListener("DOMContentLoaded", function() {
            fetchOpt1();
        });
    </script>
</head>
<body>

    <h2>Invoice Form</h2>

    <label for="invoiceNumber">Invoice Number:</label>
    <input type="text" id="invoiceNumber" placeholder="Enter Invoice Number">

    <!-- Opt1 Section -->
    <div class="option-buttons" id="opt1Container">
        <p>Loading Opt1...</p>
    </div>

    <!-- Opt2 Section -->
    <div class="option-buttons" id="opt2Container">
        <p>Loading Opt2...</p>
    </div>

    <!-- Opt3 Section -->
    <div class="option-buttons" id="opt3Container">
        <p>Loading Opt3...</p>
    </div>

    <!-- Hidden input to store the selected options -->
    <input type="hidden" id="selectedOption">

    <!-- 'Opt' Button to Reset/Reload the form -->
    <button class="opt-button" onclick="resetForm()">Reset Options</button>

    <!-- Submit Button to send the form data -->
    <button class="opt-button" onclick="submitForm()">Submit</button>

    <!-- Notice message -->
    <div id="notice"></div>

</body>
</html>
----------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 50px;
        }
        input, .option-buttons {
            display: block;
            margin: 10px 0;
            padding: 10px;
            font-size: 16px;
        }
        .option-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .option-button {
            padding: 10px 15px;
            border: 1px solid #007bff;
            background-color: white;
            color: #007bff;
            cursor: pointer;
            border-radius: 5px;
        }
        .option-button.selected {
            background-color: #007bff;
            color: white;
        }
        .opt-button {
            padding: 10px 15px;
            border: 1px solid #28a745;
            background-color: white;
            color: #28a745;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
        }
        .opt-button:hover {
            background-color: #28a745;
            color: white;
        }
        #notice {
            margin-top: 20px;
            padding: 10px;
            background-color: #28a745;
            color: white;
            font-size: 16px;
            display: none; /* Hidden by default */
            border-radius: 5px;
        }
    </style>
    <script>
        var selectedOpt1 = null;
        var selectedOpt2 = null;
        var selectedOpt3 = null;

        // Fetch Opt1 from Google Apps Script
        function fetchOpt1() {
            google.script.run.withSuccessHandler(displayOpt1).getOpt1();
        }

        // Fetch Opt2 based on selected Type
        function fetchOpt2ByType(type) {
            google.script.run.withSuccessHandler(displayOpt2).getOpt2ByType(type);
        }

        // Fetch Opt3 based on selected Type and Term
        function fetchOpt3ByType(type, term) {
            google.script.run.withSuccessHandler(displayOpt3).getOpt3ByType(type, term);
        }

        // Display the Opt2 options
        function displayOpt2(Opt2) {
            var container = document.getElementById("opt2Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt2 || Opt2.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt2 available for the selected type.</p>";
                return;
            }

            Opt2.forEach(term => {
                var button = document.createElement("button");
                button.textContent = term;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#opt2Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt2 = term;  
                    fetchOpt3ByType(selectedOpt1, term);  
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Display the Opt3 options
        function displayOpt3(Opt3) {
            var container = document.getElementById("opt3Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt3 || Opt3.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt3 available for the selected type and term.</p>";
                return;
            }

            Opt3.forEach(option => {
                var button = document.createElement("button");
                button.textContent = option;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#opt3Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt3 = option;  
                    updateSelectedOptions();  
                };
                container.appendChild(button);
            });
        }

        // Display the Type options
        function displayOpt1(Opt1) {
            var container = document.getElementById("opt1Container");
            container.innerHTML = ""; // Clear previous buttons

            if (!Opt1 || Opt1.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Opt1 available.</p>";
                return;
            }

            Opt1.forEach(type => {
                var button = document.createElement("button");
                button.textContent = type;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#opt1Container .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedOpt1 = type;  
                    fetchOpt2ByType(type);  
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Update the hidden input with selected options (allowing Opt2 & Opt3 to be optional)
        function updateSelectedOptions() {
            let selectedText = `Type: ${selectedOpt1 || "N/A"}`;
            
            if (selectedOpt2) selectedText += `, Term: ${selectedOpt2}`;
            if (selectedOpt3) selectedText += `, Option3: ${selectedOpt3}`;

            document.getElementById("selectedOption").value = selectedText;
            console.log("Selected Options: ", document.getElementById("selectedOption").value);
        }

        // Reset or reload the form when Opt button is clicked
        function resetForm() {
            selectedOpt1 = null;
            selectedOpt2 = null;
            selectedOpt3 = null;

            document.getElementById("opt1Container").innerHTML = "";
            document.getElementById("opt2Container").innerHTML = "";
            document.getElementById("opt3Container").innerHTML = "";

            fetchOpt1();
        }

        // Submit form data to Google Sheets
        function submitForm() {
            var invoiceNumber = document.getElementById("invoiceNumber").value;
            var selectedOption = document.getElementById("selectedOption").value;

            if (!invoiceNumber || !selectedOpt1) {
                alert("Please enter an invoice number and select at least one option from Opt1.");
                return;
            }

            let opt2Value = selectedOpt2 || "";
            let opt3Value = selectedOpt3 || "";

            google.script.run.saveInvoiceData(invoiceNumber, selectedOpt1, opt2Value, opt3Value);

            var notice = document.getElementById("notice");
            notice.textContent = "Invoice data submitted successfully!";
            notice.style.display = "block";

            resetForm();
        }

        // Load Opt1 when the page is ready
        document.addEventListener("DOMContentLoaded", function() {
            fetchOpt1();
        });
    </script>
</head>
<body>

    <h2>Invoice Form</h2>

    <label for="invoiceNumber">Invoice Number:</label>
    <input type="text" id="invoiceNumber" placeholder="Enter Invoice Number">

    <div class="option-buttons" id="opt1Container">
        <p>Loading Opt1...</p>
    </div>

    <div class="option-buttons" id="opt2Container">
        <p>Loading Opt2...</p>
    </div>

    <div class="option-buttons" id="opt3Container">
        <p>Loading Opt3...</p>
    </div>

    <input type="hidden" id="selectedOption">

    <button class="opt-button" onclick="resetForm()">Reset Options</button>
    <button class="opt-button" onclick="submitForm()">Submit</button>

    <div id="notice"></div>

</body>
</html>
-------------------------------------------------

function doGet() {
  return HtmlService.createTemplateFromFile('index').evaluate().setTitle("Data Entry")
    .addMetaTag('viewport', 'width=device-width, initial-scale=1')
    .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
}


// Fetch Type from the 'Control' sheet
function getType() { 
  var sheet = SpreadsheetApp.openById("1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1").getSheetByName("Control");
  var data = sheet.getRange("A2:A").getValues().flat(); 
  return [...new Set(data.filter(String))]; // Remove duplicates & empty values
}

// Fetch Fund based on the selected Type from the 'Control' sheet
function getFundByType(type) {
  var sheet = SpreadsheetApp.openById("1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1").getSheetByName("Control");
  var Type = sheet.getRange("A2:A").getValues().flat();
  var Fund = sheet.getRange("B2:B").getValues().flat();
  
  var filteredFund = [];
  
  // Loop through Type and Fund and match the selected type
  for (var i = 0; i < Type.length; i++) {
    if (Type[i] === type && Fund[i]) {
      filteredFund.push(Fund[i]);
    }
  }

  return [...new Set(filteredFund.filter(String))]; // Remove duplicates & empty values
}

// Fetch Sector based on selected Type and Fund from 'Control' sheet
function getSectorByType(type, fund) {
  var sheet = SpreadsheetApp.openById("1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1").getSheetByName("Control");
  var Type = sheet.getRange("A2:A").getValues().flat();
  var Fund = sheet.getRange("B2:B").getValues().flat();
  var Sector = sheet.getRange("C2:C").getValues().flat();

  var filteredSector = [];

  // Loop through Type, Fund, and Sector and match the selected type and fund
  for (var i = 0; i < Type.length; i++) {
    if (Type[i] === type && Fund[i] === fund && Sector[i]) {
      filteredSector.push(Sector[i]);
    }
  }

  return [...new Set(filteredSector.filter(String))]; // Remove duplicates & empty values
}




// Fetch contacts from the 'Contact' sheet
function getContacts() {
  var sheet = SpreadsheetApp.openById("1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1").getSheetByName("Contact");
  var data = sheet.getRange("A2:A").getValues().flat();
  return [...new Set(data.filter(String))]; // Remove duplicates & empty values
}

// Fetch data2 names and prices from the 'data2' sheet
function getdata2s() {
  var sheet = SpreadsheetApp.openById("1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1").getSheetByName("data2");
  var data = sheet.getRange("A2:B").getValues();
  return data.filter(row => row[0]); // Remove empty rows
}







// Function to generate a unique invoice ID in YYMMDDHHMMSSmmm format
function tid() {
  var now = new Date();
  var yy = now.getFullYear().toString().slice(-2);
  var mm = (now.getMonth() + 1).toString().padStart(2, '0');
  var dd = now.getDate().toString().padStart(2, '0');
  var hh = now.getHours().toString().padStart(2, '0');
  var min = now.getMinutes().toString().padStart(2, '0');
  var ss = now.getSeconds().toString().padStart(2, '0');
  var ms = now.getMilliseconds().toString().padStart(3, '0');
  
  return `${yy}${mm}${dd}${hh}${min}${ss}${ms}`;
}










function saveInvoiceData(invoiceNumber, type, fund, sector) {
    var sheet = SpreadsheetApp.openById("1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA1").getSheetByName("Data");
    if (!sheet) {
        sheet = SpreadsheetApp.getActiveSpreadsheet().insertSheet("Data");
        sheet.appendRow(["Invoice Number", "Type", "Fund", "Sector"]); // Add header row
    }

    sheet.appendRow([invoiceNumber, type, fund, sector]);
}

-------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 50px;
        }
        input, .option-buttons {
            display: block;
            margin: 10px 0;
            padding: 10px;
            font-size: 16px;
        }
        .option-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .option-button {
            padding: 10px 15px;
            border: 1px solid #007bff;
            background-color: white;
            color: #007bff;
            cursor: pointer;
            border-radius: 5px;
        }
        .option-button.selected {
            background-color: #007bff;
            color: white;
        }
        .opt-button {
            padding: 10px 15px;
            border: 1px solid #28a745;
            background-color: white;
            color: #28a745;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
        }
        .opt-button:hover {
            background-color: #28a745;
            color: white;
        }
        #notice {
            margin-top: 20px;
            padding: 10px;
            background-color: #28a745;
            color: white;
            font-size: 16px;
            display: none; /* Hidden by default */
            border-radius: 5px;
        }
    </style>
    <script>
        var selectedType = null;
        var selectedFund = null;
        var selectedSector = null;

        // Fetch Type from Google Apps Script
        function fetchType() {
            google.script.run.withSuccessHandler(displayType).getType();
        }

        // Fetch Fund based on selected Type
        function fetchFundByType(type) {
            google.script.run.withSuccessHandler(displayFund).getFundByType(type);
        }

        // Fetch Sector based on selected Type and Fund
        function fetchSectorByType(type, fund) {
            google.script.run.withSuccessHandler(displaySector).getSectorByType(type, fund);
        }

        // Display the Fund options
        function displayFund(Fund) {
            var container = document.getElementById("fundContainer");
            container.innerHTML = ""; // Clear previous buttons

            if (!Fund || Fund.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Fund available for the selected type.</p>";
                return;
            }

            Fund.forEach(term => {
                var button = document.createElement("button");
                button.textContent = term;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#fundContainer .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedFund = term;  
                    fetchSectorByType(selectedType, term);  
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Display the Sector options
        function displaySector(Sector) {
            var container = document.getElementById("sectorContainer");
            container.innerHTML = ""; // Clear previous buttons

            if (!Sector || Sector.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Sector available for the selected type and fund.</p>";
                return;
            }

            Sector.forEach(option => {
                var button = document.createElement("button");
                button.textContent = option;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#sectorContainer .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedSector = option;  
                    updateSelectedOptions();  
                };
                container.appendChild(button);
            });
        }

        // Display the Type options
        function displayType(Type) {
            var container = document.getElementById("typeContainer");
            container.innerHTML = ""; // Clear previous buttons

            if (!Type || Type.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Type available.</p>";
                return;
            }

            Type.forEach(type => {
                var button = document.createElement("button");
                button.textContent = type;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#typeContainer .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedType = type;  
                    fetchFundByType(type);  
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Update the hidden input with selected options (allowing Fund & Sector to be optional)
        function updateSelectedOptions() {
            let selectedText = `Type: ${selectedType || "N/A"}`;
            
            if (selectedFund) selectedText += `, Fund: ${selectedFund}`;
            if (selectedSector) selectedText += `, Sector: ${selectedSector}`;

            document.getElementById("selectedOption").value = selectedText;
            console.log("Selected Options: ", document.getElementById("selectedOption").value);
        }

        // Reset or reload the form when Opt button is clicked
        function resetForm() {
            selectedType = null;
            selectedFund = null;
            selectedSector = null;

            document.getElementById("typeContainer").innerHTML = "";
            document.getElementById("fundContainer").innerHTML = "";
            document.getElementById("sectorContainer").innerHTML = "";

            fetchType();
        }

        // Submit form data to Google Sheets
        function submitForm() {
            var invoiceNumber = document.getElementById("invoiceNumber").value;
            var selectedOption = document.getElementById("selectedOption").value;

            if (!invoiceNumber || !selectedType) {
                alert("Please enter an invoice number and select at least one option from Type.");
                return;
            }

            let fundValue = selectedFund || "";
            let sectorValue = selectedSector || "";

            google.script.run.saveInvoiceData(invoiceNumber, selectedType, fundValue, sectorValue);

            var notice = document.getElementById("notice");
            notice.textContent = "Invoice data submitted successfully!";
            notice.style.display = "block";

            resetForm();
        }

        // Load Type when the page is ready
        document.addEventListener("DOMContentLoaded", function() {
            fetchType();
        });
    </script>
</head>
<body>

    <h2>Invoice Form</h2>

    <label for="invoiceNumber">Invoice Number:</label>
    <input type="text" id="invoiceNumber" placeholder="Enter Invoice Number">

    <div class="option-buttons" id="typeContainer">
        <p>Loading Type...</p>
    </div>

    <div class="option-buttons" id="fundContainer">
        <p>Loading Fund...</p>
    </div>

    <div class="option-buttons" id="sectorContainer">
        <p>Loading Sector...</p>
    </div>

    <input type="hidden" id="selectedOption">

    <button class="opt-button" onclick="resetForm()">Reset Options</button>
    <button class="opt-button" onclick="submitForm()">Submit</button>

    <div id="notice"></div>

</body>
</html>
--------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 50px;
        }
        input, .option-buttons {
            display: block;
            margin: 10px 0;
            padding: 10px;
            font-size: 16px;
        }
        .option-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .option-button {
            padding: 10px 15px;
            border: 1px solid #007bff;
            background-color: white;
            color: #007bff;
            cursor: pointer;
            border-radius: 5px;
        }
        .option-button.selected {
            background-color: #007bff;
            color: white;
        }
        .opt-button {
            padding: 10px 15px;
            border: 1px solid #28a745;
            background-color: white;
            color: #28a745;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
        }
        .opt-button:hover {
            background-color: #28a745;
            color: white;
        }
        #notice {
            margin-top: 20px;
            padding: 10px;
            background-color: #28a745;
            color: white;
            font-size: 16px;
            display: none; /* Hidden by default */
            border-radius: 5px;
        }
    </style>
    <script>
        var selectedType = null;
        var selectedFund = null;
        var selectedSector = null;

        // Fetch Type from Google Apps Script
        function fetchType() {
            google.script.run.withSuccessHandler(displayType).getType();
        }

        // Fetch Fund based on selected Type
        function fetchFundByType(type) {
            google.script.run.withSuccessHandler(displayFund).getFundByType(type);
        }

        // Fetch Sector based on selected Type and Fund
        function fetchSectorByType(type, fund) {
            google.script.run.withSuccessHandler(displaySector).getSectorByType(type, fund);
        }

        // Display the Fund options
        function displayFund(Fund) {
            var container = document.getElementById("fundContainer");
            container.innerHTML = ""; // Clear previous buttons

            if (!Fund || Fund.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Fund available for the selected type.</p>";
                return;
            }

            Fund.forEach(fund => {
                var button = document.createElement("button");
                button.textContent = fund;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#fundContainer .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedFund = fund;  
                    fetchSectorByType(selectedType, fund);  
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Display the Sector options
        function displaySector(Sector) {
            var container = document.getElementById("sectorContainer");
            container.innerHTML = ""; // Clear previous buttons

            if (!Sector || Sector.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Sector available for the selected type and fund.</p>";
                return;
            }

            Sector.forEach(option => {
                var button = document.createElement("button");
                button.textContent = option;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#sectorContainer .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedSector = option;  
                    updateSelectedOptions();  
                };
                container.appendChild(button);
            });
        }

        // Display the Type options
        function displayType(Type) {
            var container = document.getElementById("typeContainer");
            container.innerHTML = ""; // Clear previous buttons

            if (!Type || Type.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Type available.</p>";
                return;
            }

            Type.forEach(type => {
                var button = document.createElement("button");
                button.textContent = type;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#typeContainer .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedType = type;  
                    fetchFundByType(type);  
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Update the hidden input with selected options (allowing Fund & Sector to be optional)
        function updateSelectedOptions() {
            let selectedText = `Type: ${selectedType || "N/A"}`;
            
            if (selectedFund) selectedText += `, Fund: ${selectedFund}`;
            if (selectedSector) selectedText += `, Sector: ${selectedSector}`;

            document.getElementById("selectedOption").value = selectedText;
            console.log("Selected Options: ", document.getElementById("selectedOption").value);
        }

        // Reset or reload the form when Opt button is clicked
        function resetForm() {
            selectedType = null;
            selectedFund = null;
            selectedSector = null;

            document.getElementById("typeContainer").innerHTML = "";
            document.getElementById("fundContainer").innerHTML = "";
            document.getElementById("sectorContainer").innerHTML = "";

            fetchType();
        }

        // Submit form data to Google Sheets
        function submitForm() {
            var invoiceNumber = document.getElementById("invoiceNumber").value;
            var selectedOption = document.getElementById("selectedOption").value;

            if (!invoiceNumber || !selectedType) {
                alert("Please enter an invoice number and select at least one option from Type.");
                return;
            }

            let fundValue = selectedFund || "";
            let sectorValue = selectedSector || "";

            google.script.run.saveInvoiceData(invoiceNumber, selectedType, fundValue, sectorValue);

            var notice = document.getElementById("notice");
            notice.textContent = "Invoice data submitted successfully!";
            notice.style.display = "block";

            resetForm();
        }

        // Load Type when the page is ready
        document.addEventListener("DOMContentLoaded", function() {
            fetchType();
        });
    </script>
</head>
<body>

    <h2>Invoice Form</h2>

    <label for="invoiceNumber">Invoice Number:</label>
    <input type="text" id="invoiceNumber" placeholder="Enter Invoice Number">

    <div class="option-buttons" id="typeContainer">
        <p>Loading Type...</p>
    </div>

    <div class="option-buttons" id="fundContainer">
        <p>Loading Fund...</p>
    </div>

    <div class="option-buttons" id="sectorContainer">
        <p>Loading Sector...</p>
    </div>

    <input type="hidden" id="selectedOption">

    <button class="opt-button" onclick="resetForm()">Reset Options</button>
    <button class="opt-button" onclick="submitForm()">Submit</button>

    <div id="notice"></div>

</body>
</html>
--------------------------------
function saveInvoiceData(invoiceNumber, type, fund, sector, date, contact, cash, bank, bankName, description) {
    var sheet = SpreadsheetApp.openById('1Vtj4OCGhQ0iCvyyYnlY-fv78u398IM_bXGwgn8UVXfA').getSheetByName("Data");

    // If the sheet doesn't exist, create it and add the header row
    if (!sheet) {
        sheet = SpreadsheetApp.getActiveSpreadsheet().insertSheet("Data");
        sheet.appendRow(["Invoice Number", "Type", "Fund", "Sector", "Date", "Contact", "Cash", "Bank", "Bank Name", "Description"]); // Add header row for new fields
    }

    // Append the data as a new row
    sheet.appendRow([invoiceNumber, type, fund, sector, date, contact, cash, bank, bankName, description]);
}
-------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 50px;
        }
        input, textarea, .option-buttons {
            display: block;
            margin: 10px 0;
            padding: 10px;
            font-size: 16px;
            width: 100%;
        }
        .option-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        .option-button {
            padding: 10px 15px;
            border: 1px solid #007bff;
            background-color: white;
            color: #007bff;
            cursor: pointer;
            border-radius: 5px;
        }
        .option-button.selected {
            background-color: #007bff;
            color: white;
        }
        .opt-button {
            padding: 10px 15px;
            border: 1px solid #28a745;
            background-color: white;
            color: #28a745;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
        }
        .opt-button:hover {
            background-color: #28a745;
            color: white;
        }
        #notice {
            margin-top: 20px;
            padding: 10px;
            background-color: #28a745;
            color: white;
            font-size: 16px;
            display: none; /* Hidden by default */
            border-radius: 5px;
        }
    </style>
    <script>
        var selectedType = null;
        var selectedFund = null;
        var selectedSector = null;

        // Fetch Type from Google Apps Script
        function fetchType() {
            google.script.run.withSuccessHandler(displayType).getType();
        }

        // Fetch Fund based on selected Type
        function fetchFundByType(type) {
            google.script.run.withSuccessHandler(displayFund).getFundByType(type);
        }

        // Fetch Sector based on selected Type and Fund
        function fetchSectorByType(type, fund) {
            google.script.run.withSuccessHandler(displaySector).getSectorByType(type, fund);
        }

        // Display the Fund options
        function displayFund(Fund) {
            var container = document.getElementById("fundContainer");
            container.innerHTML = ""; // Clear previous buttons

            if (!Fund || Fund.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Fund available for the selected type.</p>";
                return;
            }

            Fund.forEach(fund => {
                var button = document.createElement("button");
                button.textContent = fund;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#fundContainer .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedFund = fund;  
                    fetchSectorByType(selectedType, fund);  
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Display the Sector options
        function displaySector(Sector) {
            var container = document.getElementById("sectorContainer");
            container.innerHTML = ""; // Clear previous buttons

            if (!Sector || Sector.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Sector available for the selected type and fund.</p>";
                return;
            }

            Sector.forEach(option => {
                var button = document.createElement("button");
                button.textContent = option;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#sectorContainer .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedSector = option;  
                    updateSelectedOptions();  
                };
                container.appendChild(button);
            });
        }

        // Display the Type options
        function displayType(Type) {
            var container = document.getElementById("typeContainer");
            container.innerHTML = ""; // Clear previous buttons

            if (!Type || Type.length === 0) {
                container.innerHTML = "<p style='color:red;'>No Type available.</p>";
                return;
            }

            Type.forEach(type => {
                var button = document.createElement("button");
                button.textContent = type;
                button.classList.add("option-button");
                button.onclick = function () {
                    document.querySelectorAll("#typeContainer .selected").forEach(btn => btn.classList.remove("selected"));
                    button.classList.add("selected");

                    selectedType = type;  
                    fetchFundByType(type);  
                    updateSelectedOptions();
                };
                container.appendChild(button);
            });
        }

        // Update the hidden input with selected options (allowing Fund & Sector to be optional)
        function updateSelectedOptions() {
            let selectedText = `Type: ${selectedType || "N/A"}`;
            
            if (selectedFund) selectedText += `, Fund: ${selectedFund}`;
            if (selectedSector) selectedText += `, Sector: ${selectedSector}`;

            document.getElementById("selectedOption").value = selectedText;
            console.log("Selected Options: ", document.getElementById("selectedOption").value);
        }

        // Reset or reload the form when Opt button is clicked
        function resetForm() {
            selectedType = null;
            selectedFund = null;
            selectedSector = null;

            document.getElementById("typeContainer").innerHTML = "";
            document.getElementById("fundContainer").innerHTML = "";
            document.getElementById("sectorContainer").innerHTML = "";

            fetchType();
        }

        // Submit form data to Google Sheets
        function submitForm() {
            var invoiceNumber = document.getElementById("invoiceNumber").value;
            var selectedOption = document.getElementById("selectedOption").value;
            var date = document.getElementById("date").value;
            var contact = document.getElementById("contact").value;
            var cash = document.getElementById("cash").checked;
            var bank = document.getElementById("bank").checked;
            var bankName = document.getElementById("bankName").value;
            var description = document.getElementById("description").value;

            if (!invoiceNumber || !selectedType) {
                alert("Please enter an invoice number and select at least one option from Type.");
                return;
            }

            let fundValue = selectedFund || "";
            let sectorValue = selectedSector || "";

            google.script.run.saveInvoiceData(invoiceNumber, selectedType, fundValue, sectorValue, date, contact, cash, bank, bankName, description);

            var notice = document.getElementById("notice");
            notice.textContent = "Invoice data submitted successfully!";
            notice.style.display = "block";

            resetForm();
        }

        // Load Type when the page is ready
        document.addEventListener("DOMContentLoaded", function() {
            fetchType();
        });
    </script>
</head>
<body>

    <h2>Invoice Form</h2>

    <label for="invoiceNumber">Invoice Number:</label>
    <input type="text" id="invoiceNumber" placeholder="Enter Invoice Number">

    <label for="date">Date:</label>
    <input type="date" id="date">

    <label for="contact">Contact:</label>
    <input type="text" id="contact" placeholder="Enter Contact Info">

    <label for="cash">Cash:</label>
    <input type="checkbox" id="cash"> Cash Payment

    <label for="bank">Bank:</label>
    <input type="checkbox" id="bank"> Bank Payment

    <label for="bankName">Bank Name:</label>
    <input type="text" id="bankName" placeholder="Enter Bank Name (if applicable)">

    <label for="description">Description:</label>
    <textarea id="description" placeholder="Enter a description of the invoice"></textarea>

    <div class="option-buttons" id="typeContainer">
        <p>Loading Type...</p>
    </div>

    <div class="option-buttons" id="fundContainer">
        <p>Loading Fund...</p>
    </div>

    <div class="option-buttons" id="sectorContainer">
        <p>Loading Sector...</p>
    </div>

    <input type="hidden" id="selectedOption">

    <button class="opt-button" onclick="resetForm()">Reset Options</button>
    <button class="opt-button" onclick="submitForm()">Submit</button>

    <div id="notice"></div>

</body>
</html>
