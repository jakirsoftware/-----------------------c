{
  "apps": [
    {
      "appName": "MyApp",
      "version": "2.0",
      "fileId": "APK_FILE_ID_FOR_MYAPP"
    },
    {
      "appName": "AnotherApp",
      "version": "1.5",
      "fileId": "APK_FILE_ID_FOR_ANOTHERAPP"
    }
  ]
}



<uses-permission android:name="android.permission.INTERNET"/>
<uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES"/>
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>


import android.app.DownloadManager
import android.content.Context
import android.content.Intent
import android.net.Uri
import android.os.Environment
import android.util.Log
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import okhttp3.*
import org.json.JSONArray
import java.io.IOException

class MainActivity : AppCompatActivity() {
    private val currentVersion = "1.0" // Change this to match the app's version
    private val appName = "MyApp" // Change this to match the app name
    private val jsonUrl = "https://drive.google.com/uc?export=download&id=YOUR_JSON_FILE_ID"

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        checkForUpdate()
    }

    private fun checkForUpdate() {
        val client = OkHttpClient()
        val request = Request.Builder().url(jsonUrl).build()

        client.newCall(request).enqueue(object : Callback {
            override fun onFailure(call: Call, e: IOException) {
                Log.e("UpdateCheck", "Failed to fetch version info", e)
            }

            override fun onResponse(call: Call, response: Response) {
                response.body?.let {
                    val jsonArray = JSONArray(it.string()).getJSONArray("apps")

                    for (i in 0 until jsonArray.length()) {
                        val appObject = jsonArray.getJSONObject(i)
                        val name = appObject.getString("appName")
                        val latestVersion = appObject.getString("version")
                        val fileId = appObject.getString("fileId")

                        if (name == appName && latestVersion > currentVersion) {
                            val apkUrl = "https://drive.google.com/uc?export=download&id=$fileId"
                            runOnUiThread { downloadAndInstall(apkUrl) }
                            break
                        }
                    }
                }
            }
        })
    }

    private fun downloadAndInstall(apkUrl: String) {
        val request = DownloadManager.Request(Uri.parse(apkUrl))
            .setTitle("Downloading Update")
            .setDescription("New update is being downloaded...")
            .setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED)
            .setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "app-update.apk")

        val downloadManager = getSystemService(Context.DOWNLOAD_SERVICE) as DownloadManager
        val downloadId = downloadManager.enqueue(request)

        Thread {
            while (true) {
                val query = DownloadManager.Query().setFilterById(downloadId)
                val cursor = downloadManager.query(query)
                if (cursor.moveToFirst()) {
                    val status =
                        cursor.getInt(cursor.getColumnIndexOrThrow(DownloadManager.COLUMN_STATUS))
                    if (status == DownloadManager.STATUS_SUCCESSFUL) {
                        val apkUri = Uri.parse("file://" + Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS) + "/app-update.apk")
                        installApk(apkUri)
                        break
                    }
                }
                cursor.close()
                Thread.sleep(1000)
            }
        }.start()
    }

    private fun installApk(apkUri: Uri) {
        val intent = Intent(Intent.ACTION_VIEW).apply {
            setDataAndType(apkUri, "application/vnd.android.package-archive")
            flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_GRANT_READ_URI_PERMISSION
        }
        startActivity(intent)
    }
}
