// Function to return the HTML page for the invoice form
function doGet() {
  return HtmlService.createHtmlOutputFromFile('index')
      .setTitle('Sales Invoice');
}

// Function to get the contact list from the 'Contact' sheet
function getContactList() {
  var sheet = SpreadsheetApp.openById('').getSheetByName("Contact");
  var data = sheet.getRange("A2:A").getValues(); // Get contact names from column A
  return data.filter(function(row) { return row[0] != ""; }); // Remove empty rows
}

// Function to get a specific contact value from 'Contact' sheet
function getContactValue(contactName) {
  var sheet = SpreadsheetApp.openById('').getSheetByName("Contact");
  var data = sheet.getRange("A2:B").getValues(); // Get contact data from columns A and B
  for (var i = 0; i < data.length; i++) {
    if (data[i][0] === contactName) {
      return data[i][1]; // Return corresponding value from column B
    }
  }
  return null; // Return null if contact is not found
}

// Function to get the product list from the 'Product' sheet
function getProductList() {
  var sheet = SpreadsheetApp.openById('').getSheetByName("Product");
  var data = sheet.getRange("A2:B").getValues(); // Get product names and prices from columns A and B
  return data.filter(function(row) { return row[0] != ""; }); // Remove empty rows
}

// Function to get the price for a specific product from the 'Product' sheet
function getProductPrice(productName) {
  var sheet = SpreadsheetApp.openById('').getSheetByName("Product");
  var data = sheet.getRange("A2:B").getValues(); // Get product names and prices from columns A and B
  for (var i = 0; i < data.length; i++) {
    if (data[i][0] === productName) {
      return data[i][1]; // Return corresponding price from column B
    }
  }
  return null; // Return null if product is not found
}

// Function to get the units list from the 'Unit' sheet
function getUnitsList() {
  var sheet = SpreadsheetApp.openById('').getSheetByName("Unit");
  var data = sheet.getRange("B2:C").getValues(); // Get units from columns B and C
  return data.filter(function(row) { return row[0] != ""; }); // Remove empty rows
}

// Function to get the last used invoice number
function getLastInvoiceNumber() {
  var sheet = SpreadsheetApp.openById('').getSheetByName("Invoice");
  var lastRow = sheet.getLastRow();
  var lastInvoice = lastRow > 1 ? sheet.getRange(lastRow, 2).getValue() : 1000; // Default to 1000 if no invoices exist
  return lastInvoice;
}

// Function to generate a new invoice number (auto-increment)
function generateNewInvoiceNumber() {
  var lastInvoiceNumber = getLastInvoiceNumber();
  var newInvoiceNumber = lastInvoiceNumber + 1;
  return newInvoiceNumber;
}

// Function to save the invoice data into the 'Invoice' sheet
function saveInvoice(data) {
  var sheetId = ''; // Replace with your Google Sheet ID
  var sheet = SpreadsheetApp.openById(sheetId).getSheetByName("Invoice");

  if (!sheet) {
    sheet = SpreadsheetApp.openById(sheetId).insertSheet("Invoice");
    sheet.appendRow(["Date", "Invoice Number", "Contact Name", "Product", "Price", "Quantity", "Unit", "Total"]);
  }

  var date = new Date();
  
  data.invoice.forEach(item => {
    sheet.appendRow([  
      date.toLocaleDateString(),
      data.invoiceNumber,
      data.contact,
      item.product,
      item.price,
      item.quantity,
      item.unit,
      item.total
    ]);
  });

  return "Invoice saved successfully!";
}



<!DOCTYPE html>
<html>
<head>
  <base target="_top">
  <script>
    // Load page and ensure invoice number is initially blank
    window.onload = function() {
      document.getElementById("invoiceNumber").value = ''; // Start with a blank field
    };

    // Generate a new invoice number
    function generateInvoiceNumber() {
      google.script.run.withSuccessHandler(function(newInvoiceNumber) {
        document.getElementById("invoiceNumber").value = newInvoiceNumber; // Populate invoice number
      }).generateNewInvoiceNumber();
    }
</script>
<script>
    // Contact dropdown population
    function contactDropdown() {
      google.script.run.withSuccessHandler(function(contacts) {
        let contactSelect = document.getElementById("contact");
        contacts.forEach(contact => {
          let option = document.createElement("option");
          option.value = contact[0];
          option.text = contact[0];
          contactSelect.appendChild(option);
        });
      }).getContactList();
    }

    // Get contact value
    function getContactValue() {
      let contactName = document.getElementById("contact").value;
      google.script.run.withSuccessHandler(function(contactValue) {
        document.getElementById("contactValue").value = contactValue || "No details found";
      }).getContactValue(contactName);
    }

    // Populate product dropdown
    function populateProductDropdown(row) {
      google.script.run.withSuccessHandler(function(products) {
        let productSelect = row.querySelector(".product");
        products.forEach(product => {
          let option = document.createElement("option");
          option.value = product[0];
          option.text = product[0];
          productSelect.appendChild(option);
        });
      }).getProductList();
    }

    // Update price when product is selected
    function updatePrice(selectElement) {
      let row = selectElement.closest('tr');
      google.script.run.withSuccessHandler(function(price) {
        row.querySelector(".price").value = price || 0;
        updateTotal();
      }).getProductPrice(selectElement.value);
    }

    // Add a new item row
    function addItem() {
      let table = document.getElementById("invTable").getElementsByTagName('tbody')[0];
      let newRow = table.insertRow();
      newRow.innerHTML = `
        <td><select class="product" onchange="updatePrice(this)"><option value="">Select Product</option></select></td>
        <td><input type="number" class="price" value="0" readonly></td>
        <td><input type="number" class="quantity" value="1" min="1" onchange="updateTotal()"></td>
        <td><select class="unit"></select></td>
        <td class="total">0.00</td>
        <td><button onclick="removeItem(this)">Delete</button></td>
      `;
      populateProductDropdown(newRow);
    }

    // Remove item row
    function removeItem(button) {
      button.closest("tr").remove();
      updateTotal();
    }

    // Update total and grand total
    function updateTotal() {
      let total = 0;
      document.querySelectorAll("#invTable tbody tr").forEach(row => {
        let price = parseFloat(row.querySelector(".price").value) || 0;
        let quantity = parseFloat(row.querySelector(".quantity").value) || 1;
        let amount = price * quantity;
        row.querySelector(".total").innerText = amount.toFixed(2);
        total += amount;
      });
      document.getElementById("grandTotal").innerText = total.toFixed(2);
    }

    // Save invoice data
    function saveInvoice() {
      let invoiceNumber = document.getElementById("invoiceNumber").value;
      let contact = document.getElementById("contact").value;
      let invoiceDate = document.getElementById("invoiceDate").value;
      let items = [];

      document.querySelectorAll("#invTable tbody tr").forEach(row => {
        items.push({
          product: row.querySelector(".product").value,
          price: row.querySelector(".price").value,
          quantity: row.querySelector(".quantity").value,
          total: row.querySelector(".total").innerText
        });
      });

      if (!invoiceDate || items.length === 0) {
        alert("Please enter all details.");
        return;
      }

      google.script.run.withSuccessHandler(alert).saveInvoice({ invoiceNumber, contact, invoiceDate, invoice: items });
    }
  </script>
</head>
<body>
  <h2>Sales Invoice</h2>
  <label>Date: <input type="date" id="invoiceDate"></label><br><br>
  
  <label>Invoice #: <input type="text" id="invoiceNumber"></label>
  <button type="button" onclick="generateInvoiceNumber()">Generate New Invoice Number</button><br><br>
  
  <label>Contact: <select id="contact" onchange="getContactValue()"></select></label><br>
  <input type="text" id="contactValue" readonly><br><br>
  
  <table id="invTable">
    <thead>
      <tr>
        <th>Product</th>
        <th>Price</th>
        <th>Qty</th>
        <th>Unit</th>
        <th>Total</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
  
  <button onclick="addItem()">Add Item</button>
  <h3>Total: $<span id="grandTotal">0.00</span></h3>
  <button onclick="saveInvoice()">Save Invoice</button>
</body>
</html>
