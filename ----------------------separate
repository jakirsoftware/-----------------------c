function getEntries() {
  var sheet = SpreadsheetApp.openById('').getSheetByName("Program");
  var data = sheet.getRange("B2:Z").getValues(); // Adjusted to match actual range  
  var filteredData = data.filter(row => row[0] !== "").map(row => {
    if (row[0] instanceof Date) {
      row[0] = Utilities.formatDate(row[0], Session.getScriptTimeZone(), "yyyy-MM-dd");
    }
    return row;
  });
  Logger.log(filteredData);
  return filteredData;
}


<script>
  let entryList = [];

  function fetchEntries() {
    google.script.run
      .withSuccessHandler(response => {
        entryList = response;
        searchEntries(); // Optionally auto-search if a value exists
      })
      .withFailureHandler(error => {
        console.error("Failed to fetch entries:", error.message);
        alert("Failed to load entries. Please try again.");
      })
      .getEntries();
  }

  function searchEntries() {
    const searchValue = document.getElementById("date").value.trim();
    if (!searchValue) {
      displayEntryList();
      return;
    }

    // searchValue is already in yyyy-MM-dd format from <input type="date">
    const filteredList = entryList.filter(entry => entry[0] === searchValue);
    displayEntryList(filteredList);
  }

  function displayEntryList(filteredList = null) {
    const entryListElement = document.getElementById("entryListElement");
    if (!entryListElement) {
      console.error("entryListElement not found!");
      return;
    }

    entryListElement.innerHTML = "";

    const listToShow = filteredList || entryList;

    listToShow.forEach((entry, index) => {
      const entryItem = document.createElement("div");
      entryItem.className = "entry-item";

      entryItem.innerHTML = `
        <div class="entry-item" style="display: flex; align-items: center; justify-content: space-between; gap: 5px; font-size: 11px;">
          <div style="width: 10%; text-align: center;">${index + 1}</div>

          <span id="colW-${index}" style="width: 100%; text-align: left; font-size: 11px; padding: 4px; background-color: #f9f9b6; border: 1px solid #ccc; border-radius: 4px; display: inline-block;">
            ${entry[1] ?? 'No data'}
          </span>
               
          <input type="button" value="✏️"
            onclick="updateEntryHandler('${index}')"
            style="width: 25px; height: 25px; background-color: orange; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 11px;">

          <input type="button" value="🗑️"
            onclick="deleteEntryHandler(${index + 2});"
            style="width: 25px; height: 25px; background-color: red; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 11px;">
        </div>
      `;

      entryListElement.appendChild(entryItem);
    });
  }
</script>

function deleteEntry(rowIndex) {
  var sheet = SpreadsheetApp.openById('').getSheetByName("Program");
  var lastRow = sheet.getLastRow();
  // Ensure the rowIndex is within valid bounds (greater than header and not past last row)
  if (rowIndex >= 2 && rowIndex <= lastRow) {
    sheet.deleteRow(rowIndex);
    return "✅ ডাটা সফলভাবে মুছে ফেলা হয়েছে!";
  } else {
    return "⚠️ ভুল ইনডেক্স! ডাটা মুছে ফেলা যায়নি।";
  }
}

  }
</script>

        <script>
            function deleteEntryHandler(rowIndex) {
                google.script.run.withSuccessHandler(response => {
                    showNotice(response);
                    loadContacts();
                    fetchEntries(); // Refresh the entry list after deletion
                }).deleteEntry(rowIndex);
            }
        </script>

        <script>
            function updateEntryHandler(index) {
            // Fetch the current entry data
            const entry = entryList[index];
            // Convert the date format to YYYY-MM-DD if needed
            let dateValue = entry[0]; // The original date (may not be in YYYY-MM-DD format)
            
            // If the date is not already in the correct format, convert it
            if (dateValue && dateValue.includes("/")) {
              const [month, day, year] = dateValue.split("/"); // Assuming the format is MM/DD/YYYY
              dateValue = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;    }
            
            // Pre-fill the form fields with the entry data
            document.getElementById("date").value = dateValue;
            document.getElementById("program").value = entry[3];
            document.getElementById("goods").value = entry[4];
            updateIndex = index;
            }
        </script>
    <script>
    function tid() {
      const now = new Date();
      const yy = now.getFullYear().toString().slice(-2);
      const mm = String(now.getMonth() + 1).padStart(2, '0');
      const dd = String(now.getDate()).padStart(2, '0');
      const hh = String(now.getHours()).padStart(2, '0');
      const min = String(now.getMinutes()).padStart(2, '0');
      const ss = String(now.getSeconds()).padStart(2, '0');
      const ms = String(Math.floor(now.getMilliseconds() / 10)).padStart(2, '0'); // 00–99
      return `${yy}${mm}${dd}${hh}${min}${ss}${ms}`;
    }
    function startId() {
      document.getElementById("id").textContent = tid();
    }
    window.addEventListener('DOMContentLoaded', startId);
  </script>
